{"version":3,"sources":["webpack:///./src/components/test/test.vue?6047","webpack:///src/components/test/test.vue","webpack:///./src/components/test/test.vue?cd8b","webpack:///./src/components/test/test.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","model","value","callback","$$v","api","expression","requestType","dataType","_v","content","on","request","path","connect","closeConnection","socketData","send","socketMessage","staticRenderFns","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,WAAW,CAACE,MAAM,CAAC,YAAc,oBAAoBC,MAAM,CAACC,MAAOR,EAAO,IAAES,SAAS,SAAUC,GAAMV,EAAIW,IAAID,GAAKE,WAAW,SAASR,EAAG,iBAAiB,CAACG,MAAM,CAACC,MAAOR,EAAe,YAAES,SAAS,SAAUC,GAAMV,EAAIa,YAAYH,GAAKE,WAAW,gBAAgB,CAACR,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,SAASF,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,WAAW,GAAGF,EAAG,MAAMA,EAAG,iBAAiB,CAACG,MAAM,CAACC,MAAOR,EAAY,SAAES,SAAS,SAAUC,GAAMV,EAAIc,SAASJ,GAAKE,WAAW,aAAa,CAACR,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,MAAM,CAACN,EAAIe,GAAG,cAAcX,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,MAAM,CAACN,EAAIe,GAAG,eAAe,GAAGX,EAAG,WAAW,CAACE,MAAM,CAAC,KAAO,WAAW,SAAW,GAAG,YAAc,SAASC,MAAM,CAACC,MAAOR,EAAW,QAAES,SAAS,SAAUC,GAAMV,EAAIgB,QAAQN,GAAKE,WAAW,aAAaR,EAAG,YAAY,CAACa,GAAG,CAAC,MAAQjB,EAAIkB,UAAU,CAAClB,EAAIe,GAAG,QAAQX,EAAG,WAAW,CAACE,MAAM,CAAC,YAAc,gBAAgBC,MAAM,CAACC,MAAOR,EAAQ,KAAES,SAAS,SAAUC,GAAMV,EAAImB,KAAKT,GAAKE,WAAW,UAAUR,EAAG,YAAY,CAACa,GAAG,CAAC,MAAQjB,EAAIoB,UAAU,CAACpB,EAAIe,GAAG,QAAQX,EAAG,YAAY,CAACa,GAAG,CAAC,MAAQjB,EAAIqB,kBAAkB,CAACrB,EAAIe,GAAG,QAAQX,EAAG,WAAW,CAACE,MAAM,CAAC,YAAc,mBAAmBC,MAAM,CAACC,MAAOR,EAAc,WAAES,SAAS,SAAUC,GAAMV,EAAIsB,WAAWZ,GAAKE,WAAW,gBAAgBR,EAAG,YAAY,CAACa,GAAG,CAAC,MAAQjB,EAAIuB,OAAO,CAACvB,EAAIe,GAAG,UAAUX,EAAG,WAAW,CAACG,MAAM,CAACC,MAAOR,EAAiB,cAAES,SAAS,SAAUC,GAAMV,EAAIwB,cAAcd,GAAKE,WAAW,oBAAoB,IAC/gDa,EAAkB,GCuBtB,GACE,KAAF,OACE,KAFF,WAGI,MAAJ,CACM,IAAN,GACM,YAAN,GACM,SAAN,GACM,QAAN,GACM,KAAN,sBACM,WAAN,GACM,cAAN,KAGE,QAAF,CACI,QADJ,WAEM,OAAN,kBACQ,IAAR,MACU,KAAV,oBACA,kBACY,QAAZ,UAEA,mBACY,QAAZ,UAEU,MACF,IAAR,OACU,OAAV,eACY,IAAZ,IAEc,IAAd,2BACc,KAAd,0CACA,kBACgB,QAAhB,UAEA,mBACgB,QAAhB,UAEc,MACF,IAAZ,IAEc,IAAd,2BACc,KAAd,sCACA,kBACgB,QAAhB,UAEA,mBACgB,QAAhB,UAEc,MACF,QACE,KAAd,qBACA,kBACgB,QAAhB,UAEA,mBACgB,QAAhB,UAEc,MAEJ,MACF,QACE,QAGN,KAnDJ,WAoDM,QAAN,kBACM,KAAN,SACQ,MAAR,KACQ,QAAR,aACQ,KAAR,aAGI,MA3DJ,WA4DM,QAAN,YACM,KAAN,eACQ,MAAR,KACQ,QAAR,UAGI,WAlEJ,SAkEA,GACM,QAAN,OACM,KAAN,cACQ,MAAR,aACQ,QAAR,UAGI,KAzEJ,WA0EM,KAAN,8BAEI,gBA5EJ,WA6EM,KAAN,gBAEI,QA/EJ,WAgFA,+BACQ,QAAR,YAGQ,KAAR,gCAEQ,KAAR,wBAEQ,KAAR,0BAEQ,KAAR,iCAEQ,KAAR,4BAGI,MA/FJ,WAgGM,QAAN,kBACM,KAAN,SACQ,MAAR,KACQ,QAAR,aACQ,KAAR,cAIE,QArHF,aAwHE,UAxHF,WAyHI,KAAJ,4BCjJ6V,I,YCOzVC,EAAY,eACd,EACA3B,EACA0B,GACA,EACA,KACA,WACA,MAIa,aAAAC,E","file":"static/js/chunk-2d0e4cf8.daa85834.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-input',{attrs:{\"placeholder\":\"api格式：/api/login\"},model:{value:(_vm.api),callback:function ($$v) {_vm.api=$$v},expression:\"api\"}}),_c('el-radio-group',{model:{value:(_vm.requestType),callback:function ($$v) {_vm.requestType=$$v},expression:\"requestType\"}},[_c('el-radio-button',{attrs:{\"label\":\"get\"}}),_c('el-radio-button',{attrs:{\"label\":\"post\"}})],1),_c('br'),_c('el-radio-group',{model:{value:(_vm.dataType),callback:function ($$v) {_vm.dataType=$$v},expression:\"dataType\"}},[_c('el-radio-button',{attrs:{\"label\":\"0\"}},[_vm._v(\"formData\")]),_c('el-radio-button',{attrs:{\"label\":\"1\"}},[_vm._v(\"raw-JSON\")])],1),_c('el-input',{attrs:{\"type\":\"textarea\",\"autosize\":\"\",\"placeholder\":\"请输入内容\"},model:{value:(_vm.content),callback:function ($$v) {_vm.content=$$v},expression:\"content\"}}),_c('el-button',{on:{\"click\":_vm.request}},[_vm._v(\"请求\")]),_c('el-input',{attrs:{\"placeholder\":\"这里输入socket链接\"},model:{value:(_vm.path),callback:function ($$v) {_vm.path=$$v},expression:\"path\"}}),_c('el-button',{on:{\"click\":_vm.connect}},[_vm._v(\"连接\")]),_c('el-button',{on:{\"click\":_vm.closeConnection}},[_vm._v(\"关闭\")]),_c('el-input',{attrs:{\"placeholder\":\"这里输入socket发送的内容\"},model:{value:(_vm.socketData),callback:function ($$v) {_vm.socketData=$$v},expression:\"socketData\"}}),_c('el-button',{on:{\"click\":_vm.send}},[_vm._v(\"发送信息\")]),_c('el-input',{model:{value:(_vm.socketMessage),callback:function ($$v) {_vm.socketMessage=$$v},expression:\"socketMessage\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <el-input v-model=\"api\" placeholder=\"api格式：/api/login\"></el-input>\r\n        <el-radio-group v-model=\"requestType\">\r\n            <el-radio-button label=\"get\"></el-radio-button>\r\n            <el-radio-button label=\"post\"></el-radio-button>\r\n        </el-radio-group>\r\n        <br/>\r\n        <el-radio-group v-model=\"dataType\">\r\n            <el-radio-button label=\"0\">formData</el-radio-button>\r\n            <el-radio-button label=\"1\">raw-JSON</el-radio-button>\r\n        </el-radio-group>\r\n        <el-input v-model=\"content\" type=\"textarea\" autosize placeholder=\"请输入内容\"></el-input>\r\n        <el-button @click=\"request\">请求</el-button>\r\n        <el-input v-model=\"path\" placeholder=\"这里输入socket链接\"></el-input>\r\n        <el-button @click=\"connect\">连接</el-button>\r\n        <el-button @click=\"closeConnection\">关闭</el-button>\r\n        <el-input v-model=\"socketData\" placeholder=\"这里输入socket发送的内容\"></el-input>\r\n        <el-button @click=\"send\">发送信息</el-button>\r\n        <el-input v-model=\"socketMessage\"></el-input>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"test\",\r\n        data() {\r\n            return {\r\n                api: '',\r\n                requestType: '',\r\n                dataType: '',\r\n                content: '',\r\n                path: \"ws://localhost:3000\",\r\n                socketData: \"\",\r\n                socketMessage: \"\"\r\n            }\r\n        },\r\n        methods: {\r\n            request() {\r\n                switch (this.requestType) {\r\n                    case 'get':\r\n                        this.axios.get(this.api)\r\n                            .then((response) => {\r\n                                console.log(response);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.log(error);\r\n                            });\r\n                        break;\r\n                    case 'post':\r\n                        switch (this.dataType) {\r\n                            case '0':\r\n                                // formData\r\n                                var formData = JSON.parse(this.content);\r\n                                this.axios.post(this.api, this.qs.stringify(formData))\r\n                                    .then((response) => {\r\n                                        console.log(response);\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        console.log(error);\r\n                                    });\r\n                                break;\r\n                            case '1':\r\n                                // raw-JSON\r\n                                var raw = JSON.parse(this.content);\r\n                                this.axios.post(this.api, this.qs.parse(raw))\r\n                                    .then((response) => {\r\n                                        console.log(response);\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        console.log(error);\r\n                                    });\r\n                                break;\r\n                            default:\r\n                                this.axios.post(this.api)\r\n                                    .then((response) => {\r\n                                        console.log(response);\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        console.log(error);\r\n                                    });\r\n                                break;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            },\r\n            open() {\r\n                console.log(\"socket连接成功\");\r\n                this.$notify({\r\n                    title: '成功',\r\n                    message: 'socket连接成功',\r\n                    type: 'success'\r\n                });\r\n            },\r\n            error() {\r\n                console.log(\"连接错误\");\r\n                this.$notify.error({\r\n                    title: '错误',\r\n                    message: '连接错误'\r\n                });\r\n            },\r\n            getMessage(msg) {\r\n                console.log(msg);\r\n                this.$notify.info({\r\n                    title: 'socket收到消息',\r\n                    message: msg.data\r\n                });\r\n            },\r\n            send() {\r\n                this.socket.send(this.socketData);\r\n            },\r\n            closeConnection() {\r\n                this.socket.close();\r\n            },\r\n            connect() {\r\n                if(typeof (WebSocket) === \"undefined\") {\r\n                    console.log(\"不支持\");\r\n                } else {\r\n                    // 实例化socket\r\n                    this.socket = new WebSocket(this.path);\r\n                    // 监听 socket 连接\r\n                    this.socket.onopen = this.open;\r\n                    // 监听 socket 错误信息\r\n                    this.socket.onerror = this.error;\r\n                    // 监听socket消息\r\n                    this.socket.onmessage = this.getMessage;\r\n                    // 监听socket关闭\r\n                    this.socket.onclose = this.close;\r\n                }\r\n            },\r\n            close() {\r\n                console.log(\"socket已经关闭\");\r\n                this.$notify({\r\n                    title: '成功',\r\n                    message: 'socket已经关闭',\r\n                    type: 'success'\r\n                });\r\n            }\r\n        },\r\n        mounted() {\r\n\r\n        },\r\n        destroyed() {\r\n            this.socket.onclose = this.close;\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./test.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./test.vue?vue&type=template&id=06f6653d&scoped=true&\"\nimport script from \"./test.vue?vue&type=script&lang=js&\"\nexport * from \"./test.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"06f6653d\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}