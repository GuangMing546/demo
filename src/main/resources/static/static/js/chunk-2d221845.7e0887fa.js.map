{"version":3,"sources":["webpack:///./src/components/flowList/index.vue?9b92","webpack:///src/components/flowList/index.vue","webpack:///./src/components/flowList/index.vue?7a36","webpack:///./src/components/flowList/index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","normalListOK","draftListOK","expression","staticStyle","attrs","tableData","scopedSlots","_u","key","fn","scope","_f","row","status","_v","_s","getStatusName","on","$event","handleEdit","id","userId","handleDelete","staticRenderFns","getFlowList","getDraftList","axios","get","$router","push","params","flowId","flowName","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,WAAW,CAACE,WAAW,CAAC,CAACC,KAAK,UAAUC,QAAQ,YAAYC,QAAST,EAAIU,cAAgBV,EAAIW,aAAcC,WAAW,mCAAmCC,YAAY,CAAC,MAAQ,QAAQC,MAAM,CAAC,KAAOd,EAAIe,YAAY,CAACX,EAAG,kBAAkB,CAACU,MAAM,CAAC,KAAO,QAAQ,MAAQ,KAAK,MAAQ,SAASV,EAAG,kBAAkB,CAACU,MAAM,CAAC,KAAO,OAAO,MAAQ,OAAO,MAAQ,SAASV,EAAG,kBAAkB,CAACU,MAAM,CAAC,KAAO,SAAS,MAAQ,aAAaV,EAAG,kBAAkB,CAACU,MAAM,CAAC,MAAQ,KAAK,MAAQ,OAAOE,YAAYhB,EAAIiB,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASC,GAAO,MAAO,CAAChB,EAAG,SAAS,CAACU,MAAM,CAAC,KAAOd,EAAIqB,GAAG,eAAPrB,CAAuBoB,EAAME,IAAIC,UAAU,CAACvB,EAAIwB,GAAG,IAAIxB,EAAIyB,GAAGzB,EAAI0B,cAAcN,EAAME,IAAIC,SAAS,cAAcnB,EAAG,kBAAkB,CAACU,MAAM,CAAC,MAAQ,QAAQ,MAAQ,KAAK,MAAQ,OAAOE,YAAYhB,EAAIiB,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASC,GAAO,MAAO,CAAChB,EAAG,YAAY,CAACU,MAAM,CAAC,KAAO,OAAO,KAAO,SAASa,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO5B,EAAI6B,WAAWT,EAAME,IAAIQ,GAAIV,EAAME,IAAIf,KAAMa,EAAME,IAAIS,OAAQX,EAAME,IAAIC,WAAW,CAACvB,EAAIwB,GAAG,QAAQpB,EAAG,YAAY,CAACU,MAAM,CAAC,KAAO,OAAO,KAAO,SAASa,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO5B,EAAIgC,aAAaZ,EAAME,IAAIQ,GAAIV,EAAME,IAAIC,WAAW,CAACvB,EAAIwB,GAAG,gBAAgB,IAAI,IACrwCS,EAAkB,G,0GCyCtB,GACE,KAAF,QACE,KAFF,WAGI,MAAJ,CACM,SAAN,GACM,UAAN,GACM,cAAN,EACM,aAAN,IAGE,SAAF,CACI,UADJ,WAEM,OAAN,6FAGE,QAAF,CACI,aADJ,SACA,GACM,IAAN,GACQ,OAAR,UACQ,MAAR,QAEM,OAAN,OAGE,QAAF,CAIIC,YAJJ,WAIA,WACM,KAAN,wCACA,kBACQ,EAAR,wBADQ,IAAR,mBAAQ,IAEE,IAAV,mEAAY,IAAZ,UACY,EAAZ,iBAHA,SAAU,GAAV,EAAU,EAAV,UAAU,IAAV,sCAAY,GAAZ,WAKQ,EAAR,mBAEA,mBACQ,EAAR,UACU,KAAV,QACU,QAAV,8BAOIC,aAvBJ,WAuBA,WACMlC,KAAKmC,MAAMC,IAAI,EAArB,mBACA,kBACQ,GAAR,uBACU,EAAV,yBADU,IAAV,mBAAU,IAEE,IAAZ,oEAAc,IAAd,UACc,EAAd,gBAHA,SAAY,GAAZ,EAAY,EAAZ,UAAY,IAAZ,mBAAgB,EAAhB,iBAAc,GAAd,EAAgB,MAAhB,GAKU,EAAV,mBAGA,mBACQ,EAAR,UACU,KAAV,QACU,QAAV,8BAIIX,cAzCJ,SAyCA,GACM,IAAN,GACQ,OAAR,KACQ,MAAR,MAEM,OAAN,MASIG,WAvDJ,SAuDA,SACM5B,KAAKqC,QAAQC,KAAK,CAChBhC,KAAM,cACNiC,OAAQ,CACNC,OAAQX,EACRY,SAAUnC,EACVwB,OAAQA,EACRR,OAAQA,MASdS,aAvEJ,SAuEA,gBACM,KAAN,oCACQ,kBAAR,KACQ,iBAAR,KACQ,KAAR,YACA,iBAEQ,GAAR,cACU,IAAV,cACU,EAAV,+CACA,CACY,WAAZ,GAEA,CAAY,SAAZ,KAEA,kBACA,wBACc,EAAd,UACgB,KAAhB,UACgB,QAAhB,UAEc,EAAd,kBAGA,mBACY,EAAZ,UACc,KAAd,QACc,QAAd,iCAGA,aACU,EAAV,iCACY,OAAZ,CACc,GAAd,KAGA,kBACA,wBACc,EAAd,UACgB,KAAhB,UACgB,QAAhB,UAEc,EAAd,mBAGA,mBACY,EAAZ,UACc,KAAd,QACc,QAAd,gCAIA,wBAKE,QAxJF,WAyJI,KAAJ,cACI,KAAJ,iBCpM8V,I,YCO1VW,EAAY,eACd,EACA5C,EACAkC,GACA,EACA,KACA,WACA,MAIa,aAAAU,E","file":"static/js/chunk-2d221845.7e0887fa.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(!(_vm.normalListOK && _vm.draftListOK)),expression:\"!(normalListOK && draftListOK)\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData}},[_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"序号\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"流程名称\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"prop\":\"userId\",\"label\":\"创建者用户ID\"}}),_c('el-table-column',{attrs:{\"label\":\"状态\",\"width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tag',{attrs:{\"type\":_vm._f(\"statusFilter\")(scope.row.status)}},[_vm._v(\" \"+_vm._s(_vm.getStatusName(scope.row.status))+\" \")])]}}])}),_c('el-table-column',{attrs:{\"fixed\":\"right\",\"label\":\"操作\",\"width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleEdit(scope.row.id, scope.row.name, scope.row.userId, scope.row.status)}}},[_vm._v(\"查看\")]),_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleDelete(scope.row.id, scope.row.status)}}},[_vm._v(\"删除\")])]}}])})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <el-table\r\n                :data=\"tableData\"\r\n                style=\"width: 100%\"\r\n                v-loading=\"!(normalListOK && draftListOK)\">\r\n            <el-table-column\r\n                    type=\"index\"\r\n                    label=\"序号\"\r\n                    width=\"180\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                    prop=\"name\"\r\n                    label=\"流程名称\"\r\n                    width=\"180\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                    prop=\"userId\"\r\n                    label=\"创建者用户ID\">\r\n            </el-table-column>\r\n            <el-table-column label=\"状态\" width=\"100\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-tag :type=\"scope.row.status | statusFilter\">\r\n                        {{ getStatusName(scope.row.status) }}\r\n                    </el-tag>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n                    fixed=\"right\"\r\n                    label=\"操作\"\r\n                    width=\"100\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button @click=\"handleEdit(scope.row.id, scope.row.name, scope.row.userId, scope.row.status)\" type=\"text\" size=\"small\">查看</el-button>\r\n                    <el-button @click=\"handleDelete(scope.row.id, scope.row.status)\" type=\"text\" size=\"small\">删除</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { editorAPI } from \"../../globalAPI\";\r\n    export default {\r\n    name: \"index\",\r\n      data() {\r\n      return {\r\n        flowList: [],\r\n        draftList: [],\r\n        normalListOK: false,\r\n        draftListOK: false\r\n      }\r\n    },\r\n    computed: {\r\n      tableData() {\r\n          return Array.of(...this.flowList, ...this.draftList);\r\n      }\r\n    },\r\n    filters: {\r\n      statusFilter(status) {\r\n          const statusMap = {\r\n              normal: 'success',\r\n              draft: 'info',\r\n          };\r\n          return statusMap[status];\r\n      }\r\n    },\r\n    methods: {\r\n    /**\r\n     * ajax 获取流程列表\r\n     */\r\n    getFlowList() {\r\n        this.axios.post(editorAPI.getProcessListByUser)\r\n            .then((response) => {\r\n                this.flowList = response.data.objData;\r\n                for(let item of this.flowList) {\r\n                    item.status = \"normal\";\r\n                }\r\n                this.normalListOK = true;\r\n            })\r\n            .catch((error) => {\r\n                this.$message({\r\n                    type: \"error\",\r\n                    message: error.response.data.message\r\n                });\r\n            })\r\n    },\r\n    /**\r\n     * ajax 获取流程列表\r\n     */\r\n    getDraftList() {\r\n      this.axios.get(editorAPI.getDraftList)\r\n              .then((response) => {\r\n                if(response.data.resultCode === 1){\r\n                  this.draftList = response.data.objData;\r\n                    for(let item of this.draftList) {\r\n                        item.status = \"draft\";\r\n                    }\r\n                    this.draftListOK = true;\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                this.$message({\r\n                    type: \"error\",\r\n                    message: error.response.data.message\r\n                });\r\n              });\r\n    },\r\n    getStatusName(status) {\r\n        const statusMap = {\r\n            normal: '正稿',\r\n            draft: '草稿',\r\n        };\r\n        return statusMap[status];\r\n    },\r\n    /**\r\n     * 点击 row 中的编辑 触发的事件\r\n     * @param id 流程图 id\r\n     * @param name 流程图 name\r\n     * @param userId 当前 userId 用于后端审核\r\n     * @param status 流程图类型\r\n     */\r\n    handleEdit(id, name, userId, status) {\r\n      this.$router.push({\r\n        name: \"GraphEditor\",\r\n        params: {\r\n          flowId: id,\r\n          flowName: name,\r\n          userId: userId,\r\n          status: status\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 点击 row 中的删除 触发的事件\r\n     * @param id 要删除流程图的 id\r\n     * @param status 流程图的类型 normal draft\r\n     */\r\n    handleDelete(id, status) {\r\n        this.$confirm('此操作将永久删除该流程, 是否继续?', '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n        }).then(() => {\r\n            // 点击确定执行的操作\r\n            if(status === \"normal\") {\r\n                let data = Array.of(id);\r\n                this.axios.post(editorAPI.deleteProcess, this.qs.stringify(\r\n                    {\r\n                        processIDs: data\r\n                    },\r\n                    { indices: false }\r\n                ))\r\n                    .then((response) => {\r\n                        if(response.data.resultCode === 1){\r\n                            this.$message({\r\n                                type: 'success',\r\n                                message: '删除成功!'\r\n                            });\r\n                            this.getFlowList();\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        this.$message({\r\n                            type: \"error\",\r\n                            message: error.response.data.message\r\n                        });\r\n                    });\r\n            } else if(status === \"draft\") {\r\n                this.axios.delete(editorAPI.deleteDraft, {\r\n                    params: {\r\n                        id: id\r\n                    }\r\n                })\r\n                    .then((response) => {\r\n                        if(response.data.resultCode === 1){\r\n                            this.$message({\r\n                                type: 'success',\r\n                                message: '删除成功!'\r\n                            });\r\n                            this.getDraftList();\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        this.$message({\r\n                            type: \"error\",\r\n                            message: error.response.data.message\r\n                        });\r\n                    });\r\n            }\r\n        }).catch(() => {\r\n            // 点击取消执行的操作\r\n        });\r\n      }\r\n    },\r\n    created() {\r\n      this.getFlowList();\r\n      this.getDraftList();\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=c8071b44&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c8071b44\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}